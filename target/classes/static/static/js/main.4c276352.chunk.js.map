{"version":3,"sources":["shared/baseUrl.js","redux/ActionCreators.js","redux/ActionTypes.js","components/HeaderComponent.js","components/FooterComponent.js","components/LoadingComponent.js","components/MenuComponent.js","components/DishDetailComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/SubscriptionsComponent.js","components/MainComponent.js","redux/leaders.js","redux/comments.js","redux/dishes.js","redux/promotions.js","redux/forms.js","redux/authentication.js","redux/signup.js","redux/subscriptions.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["baseUrl","updateDatabaseTables","jwt","commentid","customerid","dataFetch2","dataFetch3","dispatch","console","log","fetch","method","body","headers","then","response","ok","statusText","error","Error","status","message","catch","fetchSubscriptions","signupFailed","errmess","type","payload","authenticate","username","password","data","JSON","stringify","json","authenticationFailed","Headers","_embedded","subscriptions","dishes","addSubscriptions","authenticationSuccess","subscriptionsFailed","dishesLoading","dishesFailed","addDishes","leadersFailed","addLeaders","leaders","commentsFailed","addComments","comments","promosLoading","promosFailed","addPromos","promos","Header","props","state","isNavOpen","isLoginModalOpen","isSignupModalOpen","isAuthenticated","toggleNav","bind","toggleLoginModal","toggleSignupModal","handleLogin","handleSignup","handleLogout","this","setState","event","value","preventDefault","firstname","lastname","signup","logout","Fragment","dark","expand","className","onClick","href","src","height","width","alt","isOpen","navbar","to","style","color","padding","display","margin","fontFamily","toggle","onSubmit","htmlFor","id","name","innerRef","input","check","remember","Component","Footer","Loading","RenderMenuItem","dish","image","Menu","menu","map","key","isLoading","errMess","active","RenderDish","randy","in","transformProps","exitTransform","description","RenderComments","every_comment","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","handleBlur","field","evt","touched","handleSubmit","errors","length","submitInfo","modalState","dishId","parseInt","rating","postComment","authentication","toggleModal","handleInputChange","handleSubscribe","target","subscribe","validate","outline","row","onChange","placeholder","valid","invalid","onBlur","rows","DishDetail","RenderCard","item","designation","Home","dishesErrMess","promotion","promosErrMess","leader","leadersLoading","leadersErrMess","required","val","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","values","postFeedback","telnum","email","agree","contactType","resetFeedbackForm","role","model","md","text","validators","show","messages","size","offset","checkbox","select","textarea","RenderLeader","left","middle","object","heading","About","title","list","unsubscribe","dishid","handleUnsubscribe","RenderSubscriptionItem","others","subscription","Subscriptions","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","params","transferrableDishId","commentsErrMess","withRouter","connect","newFeedback","toISOString","credentials","alert","newComment","addComment","actions","reset","Leaders","action","Comments","concat","Dishes","Promotions","InitialFeedback","Authentication","Signup","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4c276352.chunk.js","sourcesContent":["//this is a configuration file where we will setup whatever we require for server communication\r\n\r\n//this is the single place where we can update the server address and use this const elsewhere in our app\r\n//export const baseUrl = 'http://localhost:3001/';\r\nexport const baseUrl = 'http://localhost:5000/';","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n//we import all the different types of action types that we have decided to have and then define how those actions\r\n//would work. Each action that is created is a js object. These actions will be fed into the dispatcher via the mapDispatch functions.\r\n\r\n//Some of these actions get data from the server using fetch api and then dispatch into the store. From the store, the data enters the components. If the components trigger actions again, the actions will dispatch more data into the store.\r\n\r\n//***ASSIGNMENT WORK!!!***\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n    const newFeedback = {\r\n        firstname, \r\n        lastname, \r\n        telnum,\r\n        email, \r\n        agree, \r\n        contactType, \r\n        message, \r\n    }\r\n\r\n    newFeedback.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'api/feedbacks', {\r\n        method : 'POST',\r\n        body : JSON.stringify(newFeedback),\r\n        headers : {\r\n            \"Content-Type\" : \"application/json\"\r\n        },\r\n        credentials : 'same-origin'})\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error('Error: ' + response.status + response.statusText);\r\n                error.response = error;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            throw error;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(JSON.stringify(response));\r\n            alert(JSON.stringify(response));\r\n            //dispatch(response); //fix this\r\n        })\r\n        .catch(error => {\r\n            console.log('post feedback', error.message);\r\n            alert('Your feedback could not be posted\\nError: ' + error.message);\r\n        });\r\n};\r\n\r\n\r\n/*we should not be needing to call this directly(?) since we are going to use REST API's HTTP-POST method*/\r\nexport const addComment = function (comment) {                                                \r\n    //console.log(dishId, rating, author, comment);\r\n    return ({\r\n        type : ActionTypes.ADD_COMMENT,\r\n        payload : comment\r\n    });\r\n};\r\n\r\nexport const postComment = (customerid, jwt, dishId, rating, author, comment) => (dispatch) => {\r\n    console.log(dishId);\r\n    const dataFetch2 = baseUrl+`api/dishes/${dishId}`;\r\n    const dataFetch3 = baseUrl+`api/customers/${customerid}`;\r\n    console.log(\"dataFetch2 : \" + dataFetch2);\r\n    console.log(\"dataFetch3 : \" + dataFetch3);\r\n    const transferrableDishId = dishId;\r\n    const newComment = {\r\n        transferrableDishId,\r\n        rating,\r\n        author,\r\n        comment       \r\n    }\r\n\r\n    console.log(newComment);\r\n\r\n    newComment.date = new Date().toISOString();\r\n\r\n    let commentid = null;\r\n\r\n    return fetch(baseUrl + 'api/comments', {\r\n            method : \"POST\",\r\n            body : JSON.stringify(newComment),\r\n            headers : {\r\n                'Authorization': 'Bearer ' + jwt,\r\n                \"Content-Type\" : \"application/json\",\r\n                'Accept' : 'application/json'\r\n            },\r\n            credentials : 'same-origin'})\r\n            .then(response => {\r\n                if (response.ok) \r\n                    return response;\r\n                else {\r\n                    let error = new Error('Error: ' + response.status + \": \" + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                throw error;\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                console.log(response); \r\n                console.log(response.id); \r\n                commentid = response.id; \r\n                console.log(commentid); \r\n                dispatch(addComment(response)); \r\n                dispatch(updateDatabaseTables(jwt, commentid, customerid, dataFetch2, dataFetch3));\r\n            })   //post method includes an id during posting and returns it as response, which will be then dispatched into store via the addComment action\r\n            .catch(error => { console.log('post comments', error.message);  \r\n                              alert('Your comment could not be posted\\nError: ' + error.message); });\r\n        };\r\n\r\n          \r\nexport const updateDatabaseTables = (jwt, commentid, customerid, dataFetch2, dataFetch3) => (dispatch) => {\r\n    \r\n    console.log(commentid);\r\n    console.log(dataFetch2);\r\n    console.log(dataFetch3);\r\n\r\n    fetch(baseUrl + 'api/comments' + `/${commentid}/dish`, {\r\n        method: 'PUT',\r\n        body: dataFetch2,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + jwt,\r\n            'Content-Type': 'text/uri-list'\r\n        }\r\n    })\r\n    .then(response => {\r\n        if (response.ok){\r\n            console.log(response.statusText);\r\n            return response;\r\n        }\r\n        else {\r\n            let error = new Error(\"Error: \" + response.status + \": \" + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        let errmess = new Error(error.message);\r\n        throw errmess;\r\n    }\r\n    )\r\n    .then(() => {\r\n        console.log(\"New id enumerated in dish column of comments table!\");\r\n        //alert(\"New dish subscribed!\");\r\n        //dispatch(fetchSubscriptions(jwt, customerid));\r\n    })\r\n    .catch(error => { \r\n        console.log(error);\r\n    });\r\n\r\n    \r\n    fetch(baseUrl + 'api/comments' + `/${commentid}/customer`, {\r\n        method: 'PUT',\r\n        body: dataFetch3,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + jwt,\r\n            'Content-Type': 'text/uri-list'\r\n        }\r\n    })\r\n    .then(response => {\r\n        if (response.ok){\r\n            console.log(response.status);\r\n            return response;\r\n        }\r\n        else {\r\n            let error = new Error(\"Error: \" + response.status + \": \" + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        let errmess = new Error(error.message);\r\n        throw errmess;\r\n    }\r\n    )\r\n    .then(() => {\r\n        console.log(\"New id enumerated in dish column of comments table!\");\r\n        //alert(\"New dish subscribed!\");\r\n        dispatch(fetchSubscriptions(jwt, customerid));\r\n    })\r\n    .catch(error => { \r\n        console.log(error);\r\n    });\r\n}\r\n\r\n             \r\n \r\n\r\n\r\n\r\n//send this action object to the specific component's props (in our case the MainComponent) from where you want to dispatch it into store\r\n\r\n//this addComment function should just be changing the 'comments' part of the state, so we \r\n//should go to the comments.js reducer file next...\r\n\r\n\r\n//This action is returning a function as opposed to an action object...it is a thunk, which\r\n//will be used to dispatch a function into the store\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'api/dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            console.log(\"ATLEAST WE CONNECTED TO THE DISHES ALRIGHT!\");\r\n            return response.json();\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => {\r\n        \r\n        console.log(response._embedded);\r\n        return(response._embedded);\r\n    })\r\n    .then(dishes => dispatch(addDishes(dishes.dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n    //after a 2s delay (due to json-server flag), fetch API will load stuff:\r\n    return fetch(baseUrl + 'api/comments')\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response.json();\r\n            }\r\n            else {\r\n                var error = new Error(\"Error: \" + response.status + \": \" + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        }    \r\n        )\r\n        .then(response => {\r\n            return response._embedded;\r\n        })\r\n        .then(comments => dispatch(addComments(comments.comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    //after a 2s delay (due to json-server flag), fetch API will load leaders;\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'api/leaders')\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response.json();\r\n            }\r\n            else {\r\n                let error = new Error(\"Error: \" + response.status + \": \" + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            let errmess = new Error(error.message);\r\n            throw errmess;\r\n        }\r\n        )\r\n        .then(response => response._embedded)\r\n        .then(leaders => dispatch(addLeaders(leaders.leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\n\r\nexport const signup = (username, password, firstname, lastname) => (dispatch) => {\r\n    const data = { \"username\": \"\"+username, \"password\":\"\"+password, \"firstname\": \"\"+firstname, \"lastname\":\"\"+lastname };\r\n        return fetch(baseUrl + 'signup', {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error(\"Error: \" + response.status + \": \" + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            let errmess = new Error(error.message);\r\n            throw errmess;\r\n        }\r\n        )\r\n        .then(response => console.log(response.text()))\r\n        .then(() => {\r\n            dispatch(authenticate(username, password));\r\n            //alert(\"Your account was created and you have been logged in! :)\");\r\n        })\r\n        .catch(error => {     \r\n            dispatch(signupFailed(error.message));\r\n        })\r\n}\r\n\r\nexport const signupSuccess = (jwt) => ({\r\n    type: ActionTypes.SIGNUP_SUCCESS,\r\n    payload : {\r\n        jwt : jwt\r\n    }\r\n});\r\n\r\nexport const signupFailed = (errmess) => ({\r\n    type: ActionTypes.SIGNUP_FAILED,\r\n    payload: errmess\r\n});\r\n\r\n//baseUrl: http://localhost:3001/\r\nexport const authenticate = (username, password) => (dispatch) => {\r\n        const data = { \"username\": \"\"+username, \"password\":\"\"+password };\r\n        return fetch(baseUrl + 'authenticate', {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error(\"Error: \" + response.status + \": \" + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            let errmess = new Error(error.message);\r\n            throw errmess;\r\n        }\r\n        )\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            //console.log(\" < - wrapper }\");\r\n            //console.log(JSON.stringify(response));\r\n            //console.log(\"This is what we got: \" + response.jwt);\r\n            /*(this.setState({\r\n                jwt: response.jwt,\r\n                isAuthenticated : true\r\n            });*/\r\n            console.log(response);\r\n            console.log(response.jwt);\r\n            console.log(response.customerid);\r\n            //dispatch(authenticationSuccess(response.jwt));\r\n            //alert(\"You have been logged in! :)\");\r\n            dispatch(fetchSubscriptions(response.jwt, response.customerid));\r\n            //console.log(\"First fetch done, now second: \");\r\n            //console.log(this.state.jwt);\r\n        })\r\n        .catch(error => { \r\n            //console.log(error); \r\n            dispatch(authenticationFailed(error.message));\r\n        })\r\n}\r\n\r\nexport const authenticationSuccess = (customerid, jwt) => ({\r\n    type: ActionTypes.AUTHENTICATION_SUCCESS,\r\n    payload : {\r\n        customerid: customerid,\r\n        jwt : jwt\r\n    }\r\n});\r\n\r\nexport const authenticationFailed = (errmess) => ({\r\n    type: ActionTypes.AUTHENTICATION_FAILED,\r\n    payload: errmess\r\n});\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    dispatch(authenticationFailed());\r\n}\r\n\r\n//baseUrl: http://localhost:3001/\r\nexport const fetchSubscriptions = (jwt, customerid) => (dispatch) => {\r\n    //after a 2s delay (due to json-server flag), fetch API will load leaders;\r\n    \r\n\r\n    console.log(jwt);\r\n    console.log(customerid);\r\n    return fetch(baseUrl + `api/customers/${customerid}/subscriptions`, {\r\n        method: 'GET',\r\n        headers: new Headers({\r\n            'Authorization': 'Bearer ' + jwt,       \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n      })\r\n        })\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response.json();\r\n            }\r\n            else {\r\n                let error = new Error(\"Error: \" + response.status + \": \" + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            let errmess = new Error(error.message);\r\n            throw errmess;\r\n        }\r\n        )\r\n        .then(response => response._embedded)\r\n        .then(subscriptions => {const tryy = \"heyy\"; console.log(typeof tryy); console.log(\"hey I am here!!!!\"); console.log(subscriptions.dishes); console.log(subscriptions); dispatch(addSubscriptions(subscriptions.dishes)); dispatch(authenticationSuccess(customerid, jwt));})\r\n        .catch(error => dispatch(subscriptionsFailed(error.message)));\r\n}\r\n\r\n\r\n//these return objects...they are not thunk\r\nexport const subscriptionsLoading = () => ({\r\n    type: ActionTypes.SUBSCRIPTIONS_LOADING\r\n});\r\n\r\nexport const subscriptionsFailed = (errmess) => ({\r\n    type: ActionTypes.SUBSCRIPTIONS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addSubscriptions = (subscriptions) => ({\r\n    type: ActionTypes.ADD_SUBSCRIPTIONS,\r\n    payload: subscriptions\r\n});\r\n\r\n\r\n\r\nexport const subscribe = (jwt, customerid, dishid)  => (dispatch) => {\r\n    const data = baseUrl+`api/customers/${customerid}`;\r\n    console.log(data);\r\n    return fetch(baseUrl + 'api/dishes' + `/${dishid}/customers`, {\r\n        method: 'PUT',\r\n        body: data,\r\n        headers: {\r\n            'Content-Type': 'text/uri-list'\r\n        }\r\n    })\r\n    .then(response => {\r\n        if (response.ok){\r\n            console.log(response.statusText);\r\n            return response;\r\n        }\r\n        else {\r\n            let error = new Error(\"Error: \" + response.status + \": \" + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        let errmess = new Error(error.message);\r\n        throw errmess;\r\n    }\r\n    )\r\n    .then(() => {\r\n        console.log(\"New dish subscribed!\");\r\n        alert(\"New dish subscribed!\");\r\n        dispatch(fetchSubscriptions(jwt, customerid));\r\n    })\r\n    .catch(error => { \r\n        console.log(error);\r\n    });\r\n}\r\n\r\nexport const unsubscribe = (jwt, customerid, dishid)  => (dispatch) => {\r\n    console.log(\"sending delete command for selected dish\");\r\n    return fetch(baseUrl + 'api/customers' + `/${customerid}/subscriptions/${dishid}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + jwt,       \r\n        }\r\n    })\r\n    .then(response => {\r\n        if (response.ok){\r\n            console.log(response.statusText);\r\n            return response;\r\n        }\r\n        else {\r\n            let error = new Error(\"Error: \" + response.status + \": \" + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        let errmess = new Error(error.message);\r\n        throw errmess;\r\n    }\r\n    )\r\n    .then(() => {\r\n        console.log(\"Dish unsubscribed!\");\r\n        alert(\"The selected dish was unsubscribed!\");\r\n        dispatch(fetchSubscriptions(jwt, customerid));\r\n    })\r\n    .catch(error => { \r\n        console.log(error);\r\n    });\r\n}\r\n\r\n\r\n\r\n//these return objects...they are not thunk\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n\r\n//the 'leaders' actions\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading());\r\n    //after a 2s delay (due to json-server flag), fetch API will load stuff:\r\n    return fetch(baseUrl + 'api/promotions')\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response.json();\r\n            }\r\n            else {\r\n                var error = new Error('Error: ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        }\r\n        )\r\n        .then(response => response._embedded)\r\n        .then(promos => dispatch(addPromos(promos.promotions)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\n\r\n//these return objects...they are not thunk\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n","//simply brainstorm the action types we want: for each action, have a string which defines its type\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LOADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n\r\n\r\n//new\r\nexport const AUTHENTICATE = 'AUTHENTICATE';\r\nexport const AUTHENTICATION_SUCCESS = 'AUTHENTICATION_SUCCESS';\r\nexport const AUTHENTICATION_FAILED = 'AUTHENTICATION_FAILED';\r\n\r\nexport const ADD_SUBSCRIPTIONS = 'ADD_SUBSCRIPTIONS';\r\nexport const SUBSCRIPTIONS_LOADING = 'SUBSCRIPTIONS_LOADING';\r\nexport const SUBSCRIPTIONS_FAILED = 'SUBSCRIPTIONS_FAILED';\r\n\r\n//signup actions\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAILED = 'SIGNUP_FAILED';\r\n\r\n//subscribe to dishes\r\nexport const SUBSCRIBE_SUCCESSFUL = 'SUBSCRIBE_SUCCESSFUL';\r\n\r\n\r\n\r\n//no comments loading, because by the time we get to dish detail and try to see comments, they should already\r\n//have been loaded by then.\r\n\r\n//now that we have some new action-types, make these actions in the actioncreators.js file","import React, {Component} from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Modal, ModalHeader, ModalBody, Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen : false,\r\n            isLoginModalOpen: false,\r\n            isSignupModalOpen: false,\r\n            isAuthenticated : this.props.isAuthenticated\r\n        }\r\n        //need to bind in react, to use functions in JSX. alternative to using arrow function inside the onClick() in the JSX\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleLoginModal = this.toggleLoginModal.bind(this);\r\n        this.toggleSignupModal = this.toggleSignupModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleSignup = this.handleSignup.bind(this);\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen : !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleLoginModal(){\r\n        this.setState({\r\n            isLoginModalOpen: !this.state.isLoginModalOpen\r\n        });\r\n    }\r\n\r\n    toggleSignupModal(){\r\n        this.setState({\r\n            isSignupModalOpen: !this.state.isSignupModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggleLoginModal();\r\n        //alert(\"Username: \" + this.username.value + \"\\nPassword: \" + this.password.value + \"\\nRemember: \" + this.remember.checked);\r\n        console.log(\"Username: \" + this.username.value + \" Password: \" + this.password.value);\r\n        this.props.authenticate(this.username.value, this.password.value);\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleSignup(event){\r\n        this.toggleSignupModal();\r\n        console.log(\"First Name: \" + this.firstname.value + \" Last Name: \" + this.lastname.value + \"Username: \" + this.username.value + \" Password: \" + this.password.value);\r\n        this.props.signup(this.username.value, this.password.value, this.firstname.value, this.lastname.value);\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleLogout(event) {\r\n        event.preventDefault();\r\n        this.props.logout();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        {/*this reactstrap toggler button will be shown only for xs to sm screens. It controls collapse of navbar items*/}\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src='assets/images/logo.png' height=\"40\" width=\"50\" alt='Ristorante Moderno'/>\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\"><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\"><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\"><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\"><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/subscriptions\"><span className=\"fa fa-address-card fa-lg\"></span> Your Subscriptions</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                {\r\n                                     this.props.isAuthenticated ? \r\n\t\t\t\t\r\n                                     /*(<Redirect to={{ pathname : \"/subscriptions\"  }}/>) */\r\n                                     (\r\n                                         <div className=\"\">\r\n                                            <NavItem style={{color:\"yellow\", padding:\"5px\", display:\"inline-block\"}}>Welcome!</NavItem> \r\n                                            <NavItem style={{display:\"inline-block\"}}><Button  onClick={this.handleLogout}  className=\"fa fa-sign-out fa-sm\" style={{height:\"33px\", display:\"inline-block\"}}>Logout</Button></NavItem>\r\n                                         </div>\r\n                                     )\r\n                                     \r\n                                     : \r\n                                     \r\n                                     (\r\n                                        <div>\r\n                                            <NavItem>\r\n                                                <Button onClick={this.toggleLoginModal} color=\"success\" style={{margin:\"5px\"}}><span className=\"fa fa-sign-in fa-lg\"> <b style={{fontFamily:'Neuton'}}>Login</b></span></Button>\r\n                                                <Button onClick={this.toggleSignupModal} color=\"danger\" style={{margin:\"5px\"}}><span className=\"fa fa-sign-in fa-lg\"> <b style={{fontFamily:'Neuton'}}>New? SignUp</b></span></Button>\r\n                                            </NavItem>\r\n                                        </div>\r\n                                     )\r\n                                }\r\n                               \r\n                                <Modal isOpen={this.state.isLoginModalOpen} toggle={this.toggleLoginModal}>\r\n                                    <ModalHeader toggle={this.toggleLoginModal}>Login</ModalHeader>\r\n                                    <ModalBody>\r\n                                        <Form onSubmit={this.handleLogin}>\r\n                                            <FormGroup>\r\n                                                <Label htmlFor=\"username\">Email</Label>\r\n                                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef = {(input) => this.username = input}></Input>\r\n                                            </FormGroup>\r\n                                            <FormGroup>\r\n                                                <Label htmlFor=\"password\">Password</Label>\r\n                                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef = {(input) => this.password = input}></Input>\r\n                                            </FormGroup>\r\n                                            <FormGroup check>\r\n                                                <Label check>\r\n                                                    <Input type=\"checkbox\" name=\"remember\" innerRef = {(input) => this.remember = input}></Input>\r\n                                                    <p>Remember me</p>\r\n                                                </Label>\r\n                                            </FormGroup>\r\n                                            <Button type=\"submit\" value=\"submit\" className=\"primary\">Login</Button>\r\n                                            \r\n                                        </Form>\r\n                                    </ModalBody>\r\n                                </Modal>\r\n\r\n                                <Modal isOpen={this.state.isSignupModalOpen} toggle={this.toggleSignupModal}>\r\n                                    <ModalHeader toggle={this.toggleSignupModal}>Sign Up</ModalHeader>\r\n                                    <ModalBody>\r\n\r\n                                        <Form onSubmit={this.handleSignup}>\r\n\r\n                                            \r\n                                            <FormGroup>\r\n                                                <Label htmlFor=\"firstname\">First Name</Label>\r\n                                                <Input type=\"text\" id=\"firstname\" name=\"firstname\" innerRef = {(input) => this.firstname = input}></Input>\r\n                                            </FormGroup>\r\n\r\n                                            <FormGroup>\r\n                                                <Label htmlFor=\"lastname\">Last Name</Label>\r\n                                                <Input type=\"text\" id=\"\" name=\"lastname\" innerRef = {(input) => this.lastname = input}></Input>\r\n                                            </FormGroup>\r\n\r\n                                            <FormGroup>\r\n                                                <Label htmlFor=\"username\">Email</Label>\r\n                                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef = {(input) => this.username = input}></Input>\r\n                                            </FormGroup>\r\n                                            \r\n                                            <FormGroup>\r\n                                                <Label htmlFor=\"password\">Password</Label>\r\n                                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef = {(input) => this.password = input}></Input>\r\n                                            </FormGroup>\r\n\r\n                                            <Button type=\"submit\" value=\"submit\" className=\"primary\">SignUp</Button>\r\n                                            \r\n                                        </Form>\r\n                                    </ModalBody>\r\n                                </Modal>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>  \r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className = \"row row-header\">\r\n                            <div className = \"col-12 col-sm-6\">\r\n                                <h1>Ristorante Moderno</h1>\r\n                                <p>In a post-COVID world and culture, powered by modern technology, take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\">Home</Link></li>\r\n                            <li><Link to=\"/aboutus\">About</Link></li>\r\n                            <li><Link to=\"/menu\">Menu</Link></li>\r\n                            <li><Link to=\"/contactus\">Contact</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n\t\t                  12/A, Eskaton Garden Road<br />\r\n\t\t                  Dhaka, Greater<br />\r\n\t\t                  Bangladesh<br />\r\n\t\t                  <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t                  <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t                  <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:moderno@food.net\">\r\n                             moderno@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2021 Ristorante Moderno</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className = \"col-12\">\r\n            <span className = \"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>  {/*fa-pulse causes rotation..fa-3x: 3 times speed, fa-fw: forward spinning*/}\r\n            <p>Loading ... </p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n//this function is passed into the functional Menu component below\r\nfunction RenderMenuItem({dish}) {\r\n    return(\r\n        <Card>\r\n            {/* since we are no longer using the onClick functions in MenuComponent, we'll instead use Link to route to the selected dish:  */}\r\n            <Link to={`/menu/${dish.id}`}>\r\n                {/*fetching image from server directly using url and json key*/}\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}></CardImg>\r\n                <CardImgOverlay>\r\n                    <CardTitle style={{color:'floralwhite'}}>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    console.log('Menu component render invoked.');\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className = \"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish = {dish}/>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Simply the best Menu in town! Click on your favorite to subscribe.</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport { Card, CardImg, CardTitle, CardBody, CardText, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label, FormFeedback} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent.js';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\n//stateless functional component like the one you have written gets all the props as the first argument: function RenderDish({dish, second_property})\r\nfunction RenderDish({dish, randy}){\r\n    console.log(randy);\r\n    return(\r\n        \r\n        <FadeTransform \r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card key={dish.id}>\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}></CardImg>\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n       \r\n    );\r\n}\r\n\r\nfunction RenderComments({comments}){\r\n    console.log(comments);\r\n    return(\r\n        <Stagger in>\r\n        {comments.map((every_comment) => {\r\n            return (\r\n                <Fade in key={every_comment.id}>\r\n                <React.Fragment >\r\n                    <ul className = \"list-unstyled\">\r\n                        <li>{every_comment.comment}</li>\r\n                        \r\n                        <li>-- {every_comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(every_comment.date)))}</li>\r\n                        <h6>__________</h6>\r\n                    </ul>\r\n                    <p/>\r\n                </React.Fragment>\r\n                </Fade>\r\n            );\r\n        })}\r\n        </Stagger>\r\n    );\r\n}\r\n\r\n\r\n//since we need to re-render views upon state changes, we need class based components\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalState : false,\r\n            rating : '1',\r\n            name : '',\r\n            comment: '',\r\n            touched : {\r\n                name : false\r\n            }\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n        this.handleSubscribe = this.handleSubscribe.bind(this);\r\n    }\r\n\r\n    //this function sets the state for the value of the relevant input fields\r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    //this function observes whether the relevant input field has been Blurred out of\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: {...this.state.touched, [field]:true }\r\n        });\r\n    }\r\n\r\n    //this function validates whether the 'name' field has correct inputs\r\n    validate(name) {\r\n        const errors = {\r\n            name : ''\r\n        };\r\n\r\n        if(this.state.touched.name && name.length < 3) {\r\n            errors.name = 'Must be greater than 2 characters';\r\n        }\r\n        else if(this.state.touched.name && name.length > 15) {\r\n            errors.name = 'Must be 15 characters or less';\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    //this function handles the submit button being clicked inside the write comment button\r\n    handleSubmit = (errors) => (event) => {\r\n        \r\n        if ((errors.name.length === 0) && this.state.touched.name){\r\n            let submitInfo = this.state;\r\n            delete submitInfo.modalState; delete submitInfo.touched;\r\n            //alert(\"Current state is: \" + JSON.stringify(submitInfo));\r\n            console.log(this.props.dishId, parseInt(this.state.rating), this.state.name, this.state.comment);\r\n            this.props.postComment(this.props.authentication.customerid, this.props.authentication.jwt, this.props.dishId, parseInt(this.state.rating), this.state.name, this.state.comment);\r\n            //customerid, jwt, dishId, rating, author, comment\r\n            /*this.setState({\r\n                    //modalState : false,\r\n                    rating : '1',\r\n                    name : '',\r\n                    comment: '',\r\n                    touched : {\r\n                        name : false\r\n                    }\r\n            });*/\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    //this brings or removes Modal into view\r\n    toggleModal(){\r\n        this.setState({\r\n            modalState : !this.state.modalState\r\n        });\r\n    }\r\n\r\n    handleSubscribe(){\r\n        this.props.subscribe(this.props.authentication.jwt, this.props.authentication.customerid, this.props.dishId);\r\n    }\r\n\r\n    render(){\r\n        const errors = this.validate(this.state.name);\r\n        if (this.props.authentication.isAuthenticated) {\r\n            return(\r\n                <React.Fragment>\r\n                    <Button outline color=\"dark\" onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"> Submit Comment</span></Button>\r\n                    <Modal isOpen = {this.state.modalState} toggle = {this.toggleModal} >\r\n                        <ModalHeader toggle = {this.toggleModal}>Submit Comment</ModalHeader>\r\n                        <ModalBody>\r\n                            <Form onSubmit={this.handleSubmit(errors)}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"rating\" row>Rating</Label>\r\n                                    <Input type=\"select\" id=\"rating\" name=\"rating\" value={this.state.rating} onChange={this.handleInputChange} row>\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Input>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"name\" row>Your Name</Label>\r\n                                    <Input id=\"name\" name=\"name\" value={this.state.name} onChange={this.handleInputChange} placeholder=\"Your Name\" valid = {errors.name === \"\"} invalid = {errors.name !== \"\"} onBlur = {this.handleBlur('name')} row></Input>\r\n                                    <FormFeedback>{errors.name}</FormFeedback>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"comment\" row>Comment</Label>\r\n                                    <Input type=\"textarea\" id=\"comment\" name=\"comment\" value={this.state.comment} onChange={this.handleInputChange} rows={6} ></Input>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Button color=\"primary\" row>Submit</Button>\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                    &nbsp;\r\n                    <Button outline color=\"dark\"  onClick={this.handleSubscribe}><span className=\"fa fa-pencil fa-lg\"> Subscribe!</span></Button>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction DishDetail(props){\r\n\r\n    //conditional rendering (conditional on the props):\r\n\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else if (props.dish != null){\r\n        return(\r\n            <div className = \"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className = \"row\">\r\n                    <div className = \"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish = {props.dish} randy={2}/>\r\n                    </div>\r\n                    <div className = \"col-12 col-md-5 m-1\">\r\n                        <h4>Comments</h4>\r\n                        <RenderComments comments = {props.comments} /><br/>\r\n                        <CommentForm subscribe = {props.subscribe} dish = {props.dish} authentication = {props.authentication} postComment={props.postComment} dishId={props.dish.id}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return(<div></div>);\r\n    }\r\n} \r\n\r\n\r\nexport default DishDetail;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent.js';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nfunction RenderCard({item, isLoading, errMess}){\r\n    if (isLoading){\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return(\r\n            <Card>\r\n                <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {/* if item designation is not null, then render: */}\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                    <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className = \"row align-items-start\">\r\n                <div className = \"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}/>\r\n                </div>\r\n                <div className = \"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promosLoading} errMess={props.promosErrMess}/>\r\n                </div>\r\n                <div className = \"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess}/>    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Row, Input, Label, Col, Button } from 'reactstrap';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values){\r\n        console.log('Current state is ' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    \r\n    render(){\r\n\r\n       return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            <div style={{color:'black'}}>\r\n                            12/A, Eskaton Garden Road<br />\r\n\t\t                    Dhaka, Greater<br />\r\n\t\t                    Bangladesh<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:moderno@food.net\">moderno@food.net</a>\r\n                            </div>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:moderno@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className = \"row m-3\">\r\n                    <div className=\"col-12\">\r\n                          <h3>Send us your Feedback</h3>\r\n                       </div>\r\n                    <div className = \"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2} >\r\n                                    First Name\r\n                                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" className=\"form-control\" validators = {{required, minLength:minLength(3), maxLength:maxLength(15)}}></Control.text>\r\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{required: 'Required', minLength:'Must be greater than 2 chars', maxLength:'Must be less than 15 chars'}}/> \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2} >\r\n                                    Last Name\r\n                                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" className=\"form-control\" validators = {{required, minLength:minLength(3), maxLength:maxLength(15)}}></Control.text>\r\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{required: 'Required', minLength:'Must be greater than 2 chars', maxLength:'Must be less than 15 chars'}}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2} >\r\n                                    Telephone Number\r\n                                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Telephone\" className=\"form-control\" validators = {{required, minLength:minLength(3), maxLength:maxLength(15), isNumber}}></Control.text>\r\n                                    <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\" messages={{required:'Required', minLength:'Must be greater than 2 chars', maxLength:'Must be less than 15 chars', isNumber:'Must be a number'}} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2} >\r\n                                    Email\r\n                                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\" validators = {{required, validEmail }}></Control.text>\r\n                                    <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{required:'Required', validEmail:'Must be a valid email'}}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}} >\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" id=\"agree\" name=\"agree\" className=\"form-check-input\"></Control.checkbox>\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}} >\r\n                                    <Control.select model=\".contactType\" id=\"contactType\" name=\"contactType\" className=\"form-control\" >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows={12} className=\"form-control\">\r\n                                    </Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Stagger, Fade } from 'react-animation-components';\r\n\r\n\r\nfunction RenderLeader({leader}) {\r\n    return(\r\n        <React.Fragment>\r\n            <Media key={leader.id}>\r\n            <Media left middle>\r\n                <Media object src={baseUrl + leader.image} alt={leader.name} style={{width: '150px', height: '150px'}}/>\r\n            </Media>\r\n            <Media body className=\"ml-5\">\r\n                <Media heading>\r\n                    {leader.name}\r\n                </Media>\r\n                <p>{leader.designation}</p>\r\n                <p>{leader.description}</p>\r\n            </Media>\r\n            </Media>\r\n            <br/><br/>\r\n        </React.Fragment>    \r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = <Stagger in>\r\n    {props.leaders.map((leader) => {\r\n        return (\r\n            <Fade in>\r\n            <RenderLeader key={leader.id} leader = {leader} />\r\n            </Fade>\r\n        );\r\n    })}\r\n    </Stagger>;\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante Moderno quickly established itself as a culinary icon par excellence in Greater Dhaka. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Greater Dhaka.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                    <br/>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React from 'react';\r\nimport { Button, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent.js';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderCard({item, isLoading, errMess, unsubscribe, authentication}){\r\n\r\n    const customerid = authentication.customerid;\r\n    const jwt = authentication.jwt;\r\n\r\n    if (isLoading){\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n\r\n    else if (errMess) {\r\n        return (\r\n            <h4> {errMess} </h4>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return(\r\n            <div>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {/* if item designation is not null, then render: */}\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                <div>\r\n                    <Button onClick={() => handleUnsubscribe(unsubscribe, customerid, jwt, item.id)}>Unsubscribe</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction handleUnsubscribe(unsubscribe, customerid, jwt, dishid){\r\n    unsubscribe(jwt,customerid, dishid);\r\n}\r\n\r\nfunction Subscriptions(props) {\r\n    console.log(props);\r\n    console.log(props.subscriptions.subscriptions);\r\n    return (\r\n        <div className=\"container\">\r\n                {\r\n                    (props.authentication.isAuthenticated && ((typeof props.subscriptions.subscriptions) !== \"undefined\")) ? \r\n                        /*(<Redirect to={{ pathname : \"/subscriptions\"  }}/>) */\r\n                        (\r\n                             \r\n                            <RenderSubscriptionItem unsubscribe = {props.unsubscribe} authentication = {props.authentication} subscriptions = {props.subscriptions.subscriptions} others = {props.subscriptions}/>\r\n                                \r\n                        )\r\n                        \r\n                        : \r\n                        \r\n                        (\r\n                            <div style={{padding: \"40px\"}}>\r\n                                <h3>You need to Login to see your subscriptions.</h3>\r\n                            </div>\r\n                        )\r\n                }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderSubscriptionItem({unsubscribe, authentication, subscriptions, others}) {\r\n    \r\n    if (subscriptions.length > 0) {\r\n        let subs = subscriptions.map((subscription) => { \r\n            return(\r\n                <div key={subscription.id} className = \"col-6 col-md-5 m-1\" style={{padding: \"40px\", display:\"inline-block\"}}>\r\n                    <RenderCard unsubscribe = {unsubscribe} authentication = {authentication} item={subscription} isLoading={others.isLoading} errMess={others.errMess}/>\r\n                </div>\r\n            )\r\n        });\r\n        return subs;\r\n    }\r\n\r\n    else {\r\n        return(\r\n            <div style={{padding: \"40px\"}}>\r\n                <h3>Visit our menu page and subscribe to the best dishes in town, NOW!</h3>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    \r\n    \r\n}\r\n\r\nexport default Subscriptions;","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n//we import the action js objects and will then dispatch into store, and then receive props in this component\r\nimport { updateDatabaseTables, unsubscribe, subscribe, logout, signup, authenticate, postFeedback, postComment, fetchDishes, fetchPromos, fetchComments, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form'; //importing an action to enable persistent forms\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport Subscriptions from './SubscriptionsComponent';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\n/*mapStateToProps has the Store state as an argument/param (provided by react-redux::connect) and \r\nit's used to link the component with a CERTAIN PART of the store state. By linking I mean the object \r\nreturned by mapStateToProps will be provided at construction time as props*/\r\n\r\n\r\n//one can think of state as the object that comes out of the store (via the Provider?), and is put into the props\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      dishes : state.dishes,\r\n      comments : state.comments,                \r\n      promotions: state.promotions,             \r\n      leaders: state.leaders,\r\n      authentication : state.authentication,\r\n      subscriptions : state.subscriptions,\r\n      signup : state.signup\r\n    }\r\n}\r\n\r\n//once you connect mapDispatchToProps to a component, the component receives props.dispatch, which can\r\n//be used to dispatch into the store. The 'dispatch' function argument in the mapDispatchToProps function, \r\n//is from the store and will be obtained upon connection below.\r\n\r\n//The mapDispatchToProps function returns an object containing: an postComment property, which will have the function \r\n//dispatch(action) as its value. This object containing the postComment property can be used as props for this component.\r\n\r\n\r\n//one can think of dispatch as a function that is associated with/comes out of the store, and transitions an action into the props\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postFeedback : (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n  postComment : (customerid, jwt, dishId, rating, author, comment) => dispatch(postComment(customerid, jwt, dishId, rating, author, comment)),\r\n  fetchDishes : () => { dispatch(fetchDishes()) },                    //when this component mounts, we will call this function from the props\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },  //adding another dispatch: form will be named as feedback and it will be updated. Now send to Contact Component.\r\n  fetchComments: () => { dispatch(fetchComments()) },\r\n  fetchPromos: () => { dispatch(fetchPromos()) },\r\n  fetchLeaders: () => { dispatch(fetchLeaders()) },\r\n  authenticate: (username, password) => { dispatch(authenticate(username, password)) }, \r\n  signup: (username, password, firstname, lastname) => { dispatch(signup(username, password, firstname, lastname)) },\r\n  logout : () => { dispatch(logout()) },\r\n  subscribe : (jwt, customerid, dishid) => { dispatch(subscribe(jwt, customerid, dishid)) },\r\n  unsubscribe : (jwt, customerid, dishid) => { dispatch(unsubscribe(jwt, customerid, dishid)) },\r\n  updateDatabaseTables : (jwt, commentid, customerid, dataFetch2, dataFetch3) => { dispatch(updateDatabaseTables(jwt, commentid, customerid, dataFetch2, dataFetch3)) }\r\n});\r\n\r\n\r\n\r\nclass Main extends Component {\r\n\r\n\r\n  //a good time to call to fetch data for application is when the component has just completed mounting\r\n  //these functions, in turn dispatch data into the store and hence the props (see their action creators)\r\n  componentDidMount() {\r\n    this.props.fetchDishes(); //these function calls via actions are happening here!\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return(\r\n          <Home //see the files 'dishes.js' and 'promotions.js': because the props now contains a dishes and promotions object (from dishes or promotions.js reducer), we need to call dishes.dishes and promotions.promotions to get the value of the key\r\n            dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n            dishesLoading={this.props.dishes.isLoading}\r\n            dishesErrMess={this.props.dishes.errMess}\r\n            promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n            promosLoading={this.props.promotions.isLoading}\r\n            promosErrMess={this.props.promotions.errMess}\r\n            leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n            leadersLoading={this.props.leaders.isLoading}\r\n            leadersErrMess={this.props.leaders.errMess}\r\n          />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(    \r\n          <DishDetail \r\n            dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}  //10 is base 10\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.transferrableDishId === parseInt(match.params.dishId, 10))}\r\n            commentsErrMess={this.props.comments.comments.errMess}\r\n            postComment={this.props.postComment} \r\n            authentication = {this.props.authentication}\r\n            subscribe = {this.props.subscribe}\r\n          />\r\n      );\r\n    };\r\n\r\n    const AboutWithLeaders = () => {\r\n      return (\r\n        <About leaders={this.props.leaders.leaders} leadersErrMess={this.props.leaders.errMess}/>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header logout = {this.props.logout} signup = {this.props.signup} authenticate = {this.props.authenticate} isAuthenticated = {this.props.authentication.isAuthenticated}/>\r\n        <TransitionGroup>\r\n          {/*The key value is a unique string that represents the current location.*/}\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n          <Switch>\r\n            <Route path=\"/home\" component={HomePage}/>\r\n            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />}/>\r\n            <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm = {this.props.resetFeedbackForm} postFeedback = {this.props.postFeedback}></Contact>} />\r\n            <Route exact path=\"/subscriptions\" component={() => <Subscriptions unsubscribe = {this.props.unsubscribe} subscriptions = {this.props.subscriptions} authentication = {this.props.authentication}/>} />\r\n            <Route path='/menu/:dishId' component={DishWithId} />\r\n            <Route path='/aboutus' component={AboutWithLeaders} />\r\n            <Redirect to=\"/home\"/>\r\n          </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { //extended to 3 properties\r\n    isLoading : true,   //initially true, since dishes have not loaded\r\n    errMess : null,     //errMess set to corresponding error message from server\r\n    leaders : []         //initially set to empty array, but when loaded (due to ADD_LEADERS) it will be full\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case (ActionTypes.ADD_LEADERS):\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case (ActionTypes.LEADERS_LOADING):\r\n            return {...state, isLoading: true, errMess: null, leaders: []};     //whatever the current value of state is...i make some changes to the object. Precautionary assignments are made too even though they seem redudant.\r\n        \r\n        case (ActionTypes.LEADERS_FAILED):\r\n            return {...state, isLoading: false, errMess: action.payload, leaders : []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","//import { COMMENTS } from '../shared/comments'; <- these no longer needed since they will brought directly by the server via fetch\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n//each of these reducer files updates/modifies its exported state, based on the action that it receives in through the dispatcher, to the Store (which is a compilation\r\n//of all the reducers and states)\r\nexport const Comments = (state = {\r\n    errMess : null,\r\n    comments : []\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n\r\n        case (ActionTypes.COMMENTS_FAILED):\r\n            return {...state, isLoading: false, errMess: action.payload, comments : []};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            let comment = action.payload;\r\n            //updating the comments, since the state of this Comments action now also contains errMess\r\n\r\n            //update*: now that we have post-comment, comment id is auto added by server and the following line is handled in the action 'addComment'\r\n            /*\r\n            comment.id = state.comments.length;\r\n            comment.date = new Date().toISOString();\r\n\r\n            Also, the way it works now is that the comment is first added to the server, and then added to the redux store\r\n            */\r\n            return {...state, comments: state.comments.concat(comment)}\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\n//the dishes reducer...takes in actions, and modifies state accordingly\r\nexport const Dishes = (state = { //extended to 3 properties\r\n    isLoading : true,   //initially true, since dishes have not loaded\r\n    errMess : null,     //errMess set to corresponding error message from server\r\n    dishes : []         //initially set to empty array, but when loaded (due to ADD_DISHES) it will be full\r\n    }, action) => {\r\n    switch (action.type) {\r\n        \r\n        case (ActionTypes.ADD_DISHES):\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case (ActionTypes.DISHES_LOADING):\r\n            return {...state, isLoading: true, errMess: null, dishes: []};     //whatever the current value of state is...i make some changes to the object. Precautionary assignments are made too even though they seem redudant.\r\n        \r\n        case (ActionTypes.DISHES_FAILED):\r\n            return {...state, isLoading: false, errMess: action.payload, dishes : []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\n//the promotions reducer (will be combined with other reducers in store)...TAKES in actions through the dispatcher, and modifies state accordingly\r\nexport const Promotions = (state = { //extended to 3 properties\r\n    isLoading : true,   //initially true, since promotions have not loaded\r\n    errMess : null,     //errMess set to corresponding error message from server\r\n    promotions : []         //initially set to empty array, but when loaded (due to ADD_DISHES) it will be full\r\n    }, action) => {\r\n    switch (action.type) {\r\n        \r\n        //these actions will be dispatched into store (when it will first incorporate this reducer) when we connect a component to the store, and use the mapDispatchToProps \r\n        case (ActionTypes.ADD_PROMOS):\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case (ActionTypes.PROMOS_LOADING):\r\n            return {...state, isLoading: true, errMess: null, promotions: []};     //whatever the current value of state is...i make some changes to the object. Precautionary assignments are made too even though they seem redudant.\r\n        \r\n        case (ActionTypes.PROMOS_FAILED):\r\n            return {...state, isLoading: false, errMess: action.payload, promotions : []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}\r\n\r\n\r\n/*import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Feedback = (state = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}, action) => {\r\n    switch (action.type){\r\n        case (ActionTypes.FEEDBACK_RESPONSE):\r\n            let response = action.payload;\r\n            return {state, response};\r\n        default:\r\n            return state;\r\n    }\r\n};*/","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Authentication = (state = { //extended to 3 properties\r\n    isAuthenticated : false,   //initially false, since authentication has not happened\r\n    errMess : null,     //errMess set to corresponding error message from server upon authentication failure\r\n    jwt : null,\r\n    customerid: null\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case (ActionTypes.AUTHENTICATION_SUCCESS):\r\n            return {...state, customerid: action.payload.customerid, isAuthenticated: true, errMess: null, jwt:action.payload.jwt};\r\n\r\n        case (ActionTypes.AUTHENTICATION_FAILED):\r\n            return {...state, isAuthenticated: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Signup = (state = { //extended to 3 properties\r\n    isAuthenticated : false,   //initially false, since signup has not happened\r\n    errMess : null,     //errMess set to corresponding error message from server upon signup failure\r\n    jwt : null\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case (ActionTypes.SIGNUP_SUCCESS):\r\n            return {...state, isAuthenticated: true, errMess: null, jwt:action.payload.jwt};\r\n\r\n        case (ActionTypes.SIGNUP_FAILED):\r\n            return {...state, isAuthenticated: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Subscriptions = (state = { //extended to 3 properties\r\n    isLoading : true,   //initially true, since subscriptions have not loaded\r\n    errMess : null,     //errMess set to corresponding error message from server upon authentication failure\r\n    subscriptions : []         //initially set to empty array, but when loaded (due to ADD_SUBSCRIPTIONS) it will be full\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case (ActionTypes.ADD_SUBSCRIPTIONS):\r\n            console.log(\"inside subscriptions reducer\");\r\n            console.log(typeof action.payload);\r\n            console.log(action.payload);\r\n            return {...state, isLoading: false, errMess: null, subscriptions: action.payload};\r\n\r\n        case (ActionTypes.SUBSCRIPTIONS_LOADING):\r\n            return {...state, isLoading: true, errMess: null, subscriptions: []};     //whatever the current value of state is...i make some changes to the object. Precautionary assignments are made too even though they seem redudant.\r\n        \r\n        case (ActionTypes.SUBSCRIPTIONS_FAILED):\r\n            return {...state, isLoading: false, errMess: action.payload, subscriptions : []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Main from './components/MainComponent';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\nconst store = ConfigureStore();\r\n\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      //application is now configured to use ReactRouter\r\n\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div className=\"\">\r\n            <Main />\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\n//import { Reducer, initialState} from './reducer';\r\nimport { createForms, formReducer } from 'react-redux-form'; //enables us to input form state into our store\r\nimport {Leaders} from './leaders';\r\nimport {Comments} from './comments';\r\nimport {Dishes} from './dishes';\r\nimport {Promotions} from './promotions';\r\nimport { InitialFeedback } from './forms';\r\nimport {Authentication} from './authentication';\r\nimport {Signup} from './signup';\r\nimport {Subscriptions} from './subscriptions';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes:Dishes,\r\n            leaders:Leaders,\r\n            comments:Comments,\r\n            promotions:Promotions,\r\n            signup:Signup,\r\n            authentication:Authentication,\r\n            subscriptions:Subscriptions,\r\n            ...createForms({                  //create a reducer that takes care of the form\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)    //these stuff are enhancers for our store, and thunker and logger are now available in our application\r\n        \r\n        );\r\n    return store;\r\n}\r\n\r\n\r\n/*\r\nimport { Reducer, initialState } from './reducer';\r\nimport { createStore } from 'redux';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(Reducer, initialState);\r\n    return store;\r\n}*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'; //import before index.css to override\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport './App.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}